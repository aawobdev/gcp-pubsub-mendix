// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package gcp.actions;

import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import gcp.impl.CredentialProvider;
import gcp.impl.FileHelper;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.google.cloud.bigquery.BigQuery;
import com.google.cloud.bigquery.BigQueryOptions;
import com.google.cloud.bigquery.FieldValue;
import com.google.cloud.bigquery.FieldValueList;
import com.google.cloud.bigquery.QueryJobConfiguration;

public class J_RunQueryReturnJSON extends CustomJavaAction<java.lang.String>
{
	private java.lang.String Query;
	private IMendixObject __CredentialsFile;
	private system.proxies.FileDocument CredentialsFile;

	public J_RunQueryReturnJSON(IContext context, java.lang.String Query, IMendixObject CredentialsFile)
	{
		super(context);
		this.Query = Query;
		this.__CredentialsFile = CredentialsFile;
	}

	@Override
	public java.lang.String executeAction() throws Exception
	{
		this.CredentialsFile = __CredentialsFile == null ? null : system.proxies.FileDocument.initialize(getContext(), __CredentialsFile);

		// BEGIN USER CODE
		IContext ctx = getContext();
		CredentialProvider credProvider = new CredentialProvider(FileHelper.getCredentialsFileStream(ctx, __CredentialsFile));
		
		BigQuery bigquery =
		        BigQueryOptions.newBuilder().setCredentials(credProvider.getCredentials()).build().getService();
		
		String JSONQuery= "WITH MyTable AS ("+Query+") SELECT TO_JSON_STRING(t) AS json FROM MyTable AS t;";
		
		QueryJobConfiguration queryConfig = QueryJobConfiguration.newBuilder(JSONQuery).build();
		
		String rawResults = "[";
		
		Core.getLogger("BigQuery").info("Raw: "+ bigquery.query(queryConfig).toString());
		
		for (FieldValueList row : bigquery.query(queryConfig).iterateAll()) {
			//Core.getLogger("BigQuery").info("Rows: "+row.toString());
		      for (FieldValue val : row) {
		    	  if (rawResults.equals("["))
		    	  {
		    		  rawResults = rawResults + val.getStringValue();
		    	  } else {
		    		  rawResults = rawResults + "," + val.getStringValue();
		    	  }	    	  
		      }
		    }
		rawResults = rawResults + "]";
		
		return rawResults;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public java.lang.String toString()
	{
		return "J_RunQueryReturnJSON";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
