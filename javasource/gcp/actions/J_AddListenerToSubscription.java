// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package gcp.actions;

import java.io.InputStream;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import gcp.impl.FileHelper;
import gcp.impl.GCPSubscriber;
import gcp.impl.Logger;
import gcp.impl.SubscribeAgent;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class J_AddListenerToSubscription extends CustomJavaAction<java.lang.Boolean>
{
	private IMendixObject __CredentialsFile;
	private system.proxies.FileDocument CredentialsFile;
	private java.lang.String SubscriptionId;
	private java.lang.String OnMessageMicroflow;
	private java.lang.String OnFailureMicroflow;

	public J_AddListenerToSubscription(IContext context, IMendixObject CredentialsFile, java.lang.String SubscriptionId, java.lang.String OnMessageMicroflow, java.lang.String OnFailureMicroflow)
	{
		super(context);
		this.__CredentialsFile = CredentialsFile;
		this.SubscriptionId = SubscriptionId;
		this.OnMessageMicroflow = OnMessageMicroflow;
		this.OnFailureMicroflow = OnFailureMicroflow;
	}

	@Override
	public java.lang.Boolean executeAction() throws Exception
	{
		this.CredentialsFile = __CredentialsFile == null ? null : system.proxies.FileDocument.initialize(getContext(), __CredentialsFile);

		// BEGIN USER CODE
		SubscribeAgent agent = new SubscribeAgent();
		String projectId = FileHelper.getProjectId(this.getContext(), __CredentialsFile);
		
		if (agent.getSubscriber(SubscriptionId + "-" + projectId) == null)
		{
			agent.initialize();
			Logger.debug("Loading credentials");
			InputStream credentialsInputFile = FileHelper.getCredentialsFileStream(this.getContext(),__CredentialsFile);		
			Logger.debug("Creating subscriber");
			GCPSubscriber subscriber = new GCPSubscriber(SubscriptionId, projectId, credentialsInputFile, OnMessageMicroflow).subscribe().start();
			Logger.debug("Pushing subscriber to list");
			agent.pushSub(subscriber);
			Logger.debug("Listening to: "+agent.getGcpSubscribers().size() + " Subscriptions");
		}
		else
		{
			Logger.info(SubscriptionId + " already subscribed");
		}
		return true;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public java.lang.String toString()
	{
		return "J_AddListenerToSubscription";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
