// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package main.proxies;

public class Subscription
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject subscriptionMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Main.Subscription";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		SubId("SubId"),
		ProjectId("ProjectId"),
		isAutoSub("isAutoSub"),
		Subscription_Topic("Main.Subscription_Topic");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Subscription(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Main.Subscription"));
	}

	protected Subscription(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject subscriptionMendixObject)
	{
		if (subscriptionMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Main.Subscription", subscriptionMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Main.Subscription");

		this.subscriptionMendixObject = subscriptionMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Subscription.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static main.proxies.Subscription initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return main.proxies.Subscription.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static main.proxies.Subscription initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new main.proxies.Subscription(context, mendixObject);
	}

	public static main.proxies.Subscription load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return main.proxies.Subscription.initialize(context, mendixObject);
	}

	public static java.util.List<main.proxies.Subscription> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<main.proxies.Subscription> result = new java.util.ArrayList<main.proxies.Subscription>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Main.Subscription" + xpathConstraint))
			result.add(main.proxies.Subscription.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of SubId
	 */
	public final java.lang.String getSubId()
	{
		return getSubId(getContext());
	}

	/**
	 * @param context
	 * @return value of SubId
	 */
	public final java.lang.String getSubId(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.SubId.toString());
	}

	/**
	 * Set value of SubId
	 * @param subid
	 */
	public final void setSubId(java.lang.String subid)
	{
		setSubId(getContext(), subid);
	}

	/**
	 * Set value of SubId
	 * @param context
	 * @param subid
	 */
	public final void setSubId(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String subid)
	{
		getMendixObject().setValue(context, MemberNames.SubId.toString(), subid);
	}

	/**
	 * @return value of ProjectId
	 */
	public final java.lang.String getProjectId()
	{
		return getProjectId(getContext());
	}

	/**
	 * @param context
	 * @return value of ProjectId
	 */
	public final java.lang.String getProjectId(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ProjectId.toString());
	}

	/**
	 * Set value of ProjectId
	 * @param projectid
	 */
	public final void setProjectId(java.lang.String projectid)
	{
		setProjectId(getContext(), projectid);
	}

	/**
	 * Set value of ProjectId
	 * @param context
	 * @param projectid
	 */
	public final void setProjectId(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String projectid)
	{
		getMendixObject().setValue(context, MemberNames.ProjectId.toString(), projectid);
	}

	/**
	 * @return value of isAutoSub
	 */
	public final java.lang.Boolean getisAutoSub()
	{
		return getisAutoSub(getContext());
	}

	/**
	 * @param context
	 * @return value of isAutoSub
	 */
	public final java.lang.Boolean getisAutoSub(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.isAutoSub.toString());
	}

	/**
	 * Set value of isAutoSub
	 * @param isautosub
	 */
	public final void setisAutoSub(java.lang.Boolean isautosub)
	{
		setisAutoSub(getContext(), isautosub);
	}

	/**
	 * Set value of isAutoSub
	 * @param context
	 * @param isautosub
	 */
	public final void setisAutoSub(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean isautosub)
	{
		getMendixObject().setValue(context, MemberNames.isAutoSub.toString(), isautosub);
	}

	/**
	 * @return value of Subscription_Topic
	 */
	public final main.proxies.Topic getSubscription_Topic() throws com.mendix.core.CoreException
	{
		return getSubscription_Topic(getContext());
	}

	/**
	 * @param context
	 * @return value of Subscription_Topic
	 */
	public final main.proxies.Topic getSubscription_Topic(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		main.proxies.Topic result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Subscription_Topic.toString());
		if (identifier != null)
			result = main.proxies.Topic.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Subscription_Topic
	 * @param subscription_topic
	 */
	public final void setSubscription_Topic(main.proxies.Topic subscription_topic)
	{
		setSubscription_Topic(getContext(), subscription_topic);
	}

	/**
	 * Set value of Subscription_Topic
	 * @param context
	 * @param subscription_topic
	 */
	public final void setSubscription_Topic(com.mendix.systemwideinterfaces.core.IContext context, main.proxies.Topic subscription_topic)
	{
		if (subscription_topic == null)
			getMendixObject().setValue(context, MemberNames.Subscription_Topic.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Subscription_Topic.toString(), subscription_topic.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return subscriptionMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final main.proxies.Subscription that = (main.proxies.Subscription) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Main.Subscription";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
