// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package chart.proxies;

public class DataSet
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject dataSetMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Chart.DataSet";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Color("Color"),
		Label("Label"),
		Sort("Sort"),
		DataSet_Data("Chart.DataSet_Data");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public DataSet(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Chart.DataSet"));
	}

	protected DataSet(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject dataSetMendixObject)
	{
		if (dataSetMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Chart.DataSet", dataSetMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Chart.DataSet");

		this.dataSetMendixObject = dataSetMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'DataSet.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static chart.proxies.DataSet initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return chart.proxies.DataSet.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static chart.proxies.DataSet initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new chart.proxies.DataSet(context, mendixObject);
	}

	public static chart.proxies.DataSet load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return chart.proxies.DataSet.initialize(context, mendixObject);
	}

	public static java.util.List<chart.proxies.DataSet> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<chart.proxies.DataSet> result = new java.util.ArrayList<chart.proxies.DataSet>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Chart.DataSet" + xpathConstraint))
			result.add(chart.proxies.DataSet.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Color
	 */
	public final java.lang.String getColor()
	{
		return getColor(getContext());
	}

	/**
	 * @param context
	 * @return value of Color
	 */
	public final java.lang.String getColor(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Color.toString());
	}

	/**
	 * Set value of Color
	 * @param color
	 */
	public final void setColor(java.lang.String color)
	{
		setColor(getContext(), color);
	}

	/**
	 * Set value of Color
	 * @param context
	 * @param color
	 */
	public final void setColor(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String color)
	{
		getMendixObject().setValue(context, MemberNames.Color.toString(), color);
	}

	/**
	 * @return value of Label
	 */
	public final java.lang.String getLabel()
	{
		return getLabel(getContext());
	}

	/**
	 * @param context
	 * @return value of Label
	 */
	public final java.lang.String getLabel(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Label.toString());
	}

	/**
	 * Set value of Label
	 * @param label
	 */
	public final void setLabel(java.lang.String label)
	{
		setLabel(getContext(), label);
	}

	/**
	 * Set value of Label
	 * @param context
	 * @param label
	 */
	public final void setLabel(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String label)
	{
		getMendixObject().setValue(context, MemberNames.Label.toString(), label);
	}

	/**
	 * @return value of Sort
	 */
	public final java.lang.Integer getSort()
	{
		return getSort(getContext());
	}

	/**
	 * @param context
	 * @return value of Sort
	 */
	public final java.lang.Integer getSort(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.Sort.toString());
	}

	/**
	 * Set value of Sort
	 * @param sort
	 */
	public final void setSort(java.lang.Integer sort)
	{
		setSort(getContext(), sort);
	}

	/**
	 * Set value of Sort
	 * @param context
	 * @param sort
	 */
	public final void setSort(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer sort)
	{
		getMendixObject().setValue(context, MemberNames.Sort.toString(), sort);
	}

	/**
	 * @return value of DataSet_Data
	 */
	public final java.util.List<main.proxies.Data> getDataSet_Data() throws com.mendix.core.CoreException
	{
		return getDataSet_Data(getContext());
	}

	/**
	 * @param context
	 * @return value of DataSet_Data
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<main.proxies.Data> getDataSet_Data(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<main.proxies.Data> result = new java.util.ArrayList<main.proxies.Data>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.DataSet_Data.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(main.proxies.Data.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of DataSet_Data
	 * @param dataset_data
	 */
	public final void setDataSet_Data(java.util.List<main.proxies.Data> dataset_data)
	{
		setDataSet_Data(getContext(), dataset_data);
	}

	/**
	 * Set value of DataSet_Data
	 * @param context
	 * @param dataset_data
	 */
	public final void setDataSet_Data(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<main.proxies.Data> dataset_data)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (main.proxies.Data proxyObject : dataset_data)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.DataSet_Data.toString(), identifiers);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return dataSetMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final chart.proxies.DataSet that = (chart.proxies.DataSet) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Chart.DataSet";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
