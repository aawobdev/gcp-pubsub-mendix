// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package iot.proxies;

public class Device
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject deviceMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "IoT.Device";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Device_Registry("IoT.Device_Registry"),
		Telemetry("IoT.Telemetry"),
		State("IoT.State");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Device(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "IoT.Device"));
	}

	protected Device(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject deviceMendixObject)
	{
		if (deviceMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("IoT.Device", deviceMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a IoT.Device");

		this.deviceMendixObject = deviceMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Device.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static iot.proxies.Device initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return iot.proxies.Device.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static iot.proxies.Device initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new iot.proxies.Device(context, mendixObject);
	}

	public static iot.proxies.Device load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return iot.proxies.Device.initialize(context, mendixObject);
	}

	public static java.util.List<iot.proxies.Device> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<iot.proxies.Device> result = new java.util.ArrayList<iot.proxies.Device>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//IoT.Device" + xpathConstraint))
			result.add(iot.proxies.Device.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Device_Registry
	 */
	public final iot.proxies.Registry getDevice_Registry() throws com.mendix.core.CoreException
	{
		return getDevice_Registry(getContext());
	}

	/**
	 * @param context
	 * @return value of Device_Registry
	 */
	public final iot.proxies.Registry getDevice_Registry(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		iot.proxies.Registry result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Device_Registry.toString());
		if (identifier != null)
			result = iot.proxies.Registry.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Device_Registry
	 * @param device_registry
	 */
	public final void setDevice_Registry(iot.proxies.Registry device_registry)
	{
		setDevice_Registry(getContext(), device_registry);
	}

	/**
	 * Set value of Device_Registry
	 * @param context
	 * @param device_registry
	 */
	public final void setDevice_Registry(com.mendix.systemwideinterfaces.core.IContext context, iot.proxies.Registry device_registry)
	{
		if (device_registry == null)
			getMendixObject().setValue(context, MemberNames.Device_Registry.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Device_Registry.toString(), device_registry.getMendixObject().getId());
	}

	/**
	 * @return value of Telemetry
	 */
	public final pubsub.proxies.Topic getTelemetry() throws com.mendix.core.CoreException
	{
		return getTelemetry(getContext());
	}

	/**
	 * @param context
	 * @return value of Telemetry
	 */
	public final pubsub.proxies.Topic getTelemetry(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		pubsub.proxies.Topic result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Telemetry.toString());
		if (identifier != null)
			result = pubsub.proxies.Topic.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Telemetry
	 * @param telemetry
	 */
	public final void setTelemetry(pubsub.proxies.Topic telemetry)
	{
		setTelemetry(getContext(), telemetry);
	}

	/**
	 * Set value of Telemetry
	 * @param context
	 * @param telemetry
	 */
	public final void setTelemetry(com.mendix.systemwideinterfaces.core.IContext context, pubsub.proxies.Topic telemetry)
	{
		if (telemetry == null)
			getMendixObject().setValue(context, MemberNames.Telemetry.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Telemetry.toString(), telemetry.getMendixObject().getId());
	}

	/**
	 * @return value of State
	 */
	public final pubsub.proxies.Topic getState() throws com.mendix.core.CoreException
	{
		return getState(getContext());
	}

	/**
	 * @param context
	 * @return value of State
	 */
	public final pubsub.proxies.Topic getState(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		pubsub.proxies.Topic result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.State.toString());
		if (identifier != null)
			result = pubsub.proxies.Topic.load(context, identifier);
		return result;
	}

	/**
	 * Set value of State
	 * @param state
	 */
	public final void setState(pubsub.proxies.Topic state)
	{
		setState(getContext(), state);
	}

	/**
	 * Set value of State
	 * @param context
	 * @param state
	 */
	public final void setState(com.mendix.systemwideinterfaces.core.IContext context, pubsub.proxies.Topic state)
	{
		if (state == null)
			getMendixObject().setValue(context, MemberNames.State.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.State.toString(), state.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return deviceMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final iot.proxies.Device that = (iot.proxies.Device) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "IoT.Device";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
