// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package iot.proxies;

public class Command
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject commandMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "IoT.Command";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Command("Command"),
		SendToAll("SendToAll"),
		SubFolder("SubFolder"),
		Command_Device("IoT.Command_Device");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Command(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "IoT.Command"));
	}

	protected Command(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject commandMendixObject)
	{
		if (commandMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("IoT.Command", commandMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a IoT.Command");

		this.commandMendixObject = commandMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Command.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static iot.proxies.Command initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return iot.proxies.Command.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static iot.proxies.Command initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new iot.proxies.Command(context, mendixObject);
	}

	public static iot.proxies.Command load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return iot.proxies.Command.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Command
	 */
	public final java.lang.String getCommand()
	{
		return getCommand(getContext());
	}

	/**
	 * @param context
	 * @return value of Command
	 */
	public final java.lang.String getCommand(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Command.toString());
	}

	/**
	 * Set value of Command
	 * @param command
	 */
	public final void setCommand(java.lang.String command)
	{
		setCommand(getContext(), command);
	}

	/**
	 * Set value of Command
	 * @param context
	 * @param command
	 */
	public final void setCommand(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String command)
	{
		getMendixObject().setValue(context, MemberNames.Command.toString(), command);
	}

	/**
	 * @return value of SendToAll
	 */
	public final java.lang.Boolean getSendToAll()
	{
		return getSendToAll(getContext());
	}

	/**
	 * @param context
	 * @return value of SendToAll
	 */
	public final java.lang.Boolean getSendToAll(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.SendToAll.toString());
	}

	/**
	 * Set value of SendToAll
	 * @param sendtoall
	 */
	public final void setSendToAll(java.lang.Boolean sendtoall)
	{
		setSendToAll(getContext(), sendtoall);
	}

	/**
	 * Set value of SendToAll
	 * @param context
	 * @param sendtoall
	 */
	public final void setSendToAll(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean sendtoall)
	{
		getMendixObject().setValue(context, MemberNames.SendToAll.toString(), sendtoall);
	}

	/**
	 * @return value of SubFolder
	 */
	public final java.lang.String getSubFolder()
	{
		return getSubFolder(getContext());
	}

	/**
	 * @param context
	 * @return value of SubFolder
	 */
	public final java.lang.String getSubFolder(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.SubFolder.toString());
	}

	/**
	 * Set value of SubFolder
	 * @param subfolder
	 */
	public final void setSubFolder(java.lang.String subfolder)
	{
		setSubFolder(getContext(), subfolder);
	}

	/**
	 * Set value of SubFolder
	 * @param context
	 * @param subfolder
	 */
	public final void setSubFolder(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String subfolder)
	{
		getMendixObject().setValue(context, MemberNames.SubFolder.toString(), subfolder);
	}

	/**
	 * @return value of Command_Device
	 */
	public final iot.proxies.Device getCommand_Device() throws com.mendix.core.CoreException
	{
		return getCommand_Device(getContext());
	}

	/**
	 * @param context
	 * @return value of Command_Device
	 */
	public final iot.proxies.Device getCommand_Device(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		iot.proxies.Device result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Command_Device.toString());
		if (identifier != null)
			result = iot.proxies.Device.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Command_Device
	 * @param command_device
	 */
	public final void setCommand_Device(iot.proxies.Device command_device)
	{
		setCommand_Device(getContext(), command_device);
	}

	/**
	 * Set value of Command_Device
	 * @param context
	 * @param command_device
	 */
	public final void setCommand_Device(com.mendix.systemwideinterfaces.core.IContext context, iot.proxies.Device command_device)
	{
		if (command_device == null)
			getMendixObject().setValue(context, MemberNames.Command_Device.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Command_Device.toString(), command_device.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return commandMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final iot.proxies.Command that = (iot.proxies.Command) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "IoT.Command";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
