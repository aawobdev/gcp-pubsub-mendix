// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package gcpiot.actions;

import java.io.InputStream;
import com.google.api.client.http.HttpRequestInitializer;
import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import aQute.lib.json.FileHandler;
import gcpiot.impl.FileHelper;
import gcpiot.impl.GCPRegistry;
import gcpiot.impl.GCPSubscriber;
import gcpiot.impl.Agent;
import gcpiot.impl.CredentialProvider;
import gcpiot.impl.Device;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.google.api.client.json.JsonFactory;
import com.google.api.client.json.jackson2.JacksonFactory;
import com.google.api.client.util.Charsets;
import com.google.cloud.Role;
import com.google.cloud.iot.v1.DeviceManagerClient;
import com.google.cloud.iot.v1.DeviceName;
import com.google.cloud.iot.v1.SendCommandToDeviceResponse;
import com.google.cloud.pubsub.v1.TopicAdminClient;
import com.google.common.io.Files;
import com.google.iam.v1.Binding;
import com.google.protobuf.ByteString;
import com.google.pubsub.v1.Topic;
import com.google.pubsub.v1.TopicName;

public class sendCommand extends CustomJavaAction<java.lang.Boolean>
{
	private java.lang.String deviceId;
	private java.lang.String projectId;
	private java.lang.String cloudRegion;
	private java.lang.String registryName;
	private java.lang.String command;
	private java.lang.String subFolder;
	private IMendixObject __CredentialsFile;
	private system.proxies.FileDocument CredentialsFile;

	public sendCommand(IContext context, java.lang.String deviceId, java.lang.String projectId, java.lang.String cloudRegion, java.lang.String registryName, java.lang.String command, java.lang.String subFolder, IMendixObject CredentialsFile)
	{
		super(context);
		this.deviceId = deviceId;
		this.projectId = projectId;
		this.cloudRegion = cloudRegion;
		this.registryName = registryName;
		this.command = command;
		this.subFolder = subFolder;
		this.__CredentialsFile = CredentialsFile;
	}

	@Override
	public java.lang.Boolean executeAction() throws Exception
	{
		this.CredentialsFile = __CredentialsFile == null ? null : system.proxies.FileDocument.initialize(getContext(), __CredentialsFile);

		// BEGIN USER CODE
		Agent agent = new Agent();
		GCPRegistry registry = agent.getRegistry(projectId + '-' + registryName);
		
		if (registry == null)
		{
			agent.initialize();
			InputStream credentialsInputFile = FileHelper.getCredentialsFileStream(this.getContext(),__CredentialsFile);			
			registry = new GCPRegistry(projectId, registryName,cloudRegion,credentialsInputFile);
			registry.startClient();
			agent.pushReg(registry);
			Core.getLogger(Agent.LogNode).debug("Registries: "+agent.getGcpRegistries().size());
		}
		
		SendCommandToDeviceResponse response = registry.sendCommand(deviceId, subFolder, command);
	
		return true;

		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public java.lang.String toString()
	{
		return "sendCommand";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
