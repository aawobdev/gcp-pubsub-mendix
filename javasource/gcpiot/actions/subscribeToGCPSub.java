// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package gcpiot.actions;

import java.io.InputStream;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import gcpiot.impl.FileHelper;
import gcpiot.impl.Agent;
import gcpiot.impl.GCPSubscriber;
import com.mendix.systemwideinterfaces.core.IMendixObject;

/**
 * Subscribes to Google Pub/Sub Subscription using sub name and JSON credentials file (https://cloud.google.com/docs/authentication/production#creating_a_service_account)
 * 
 * If you do not want to handle failures, specify a Microflow for OnFailure that does nothing
 * 
 * OnMessage and OnFailure Microflows are called asynchronously with two String parameters
 * "Attributes" and "Payload" See "EXAMPLE_Callback" for example
 * 
 * Returns String of ProjectId from Credentials file for confirmation
 * 
 * See example "EXAMPLE_Subscribe"
 */
public class subscribeToGCPSub extends CustomJavaAction<java.lang.String>
{
	private IMendixObject __CredentialsFile;
	private system.proxies.FileDocument CredentialsFile;
	private java.lang.String SubscriptionId;
	private java.lang.String OnMessageMicroflow;
	private java.lang.String OnFailureMicroflow;

	public subscribeToGCPSub(IContext context, IMendixObject CredentialsFile, java.lang.String SubscriptionId, java.lang.String OnMessageMicroflow, java.lang.String OnFailureMicroflow)
	{
		super(context);
		this.__CredentialsFile = CredentialsFile;
		this.SubscriptionId = SubscriptionId;
		this.OnMessageMicroflow = OnMessageMicroflow;
		this.OnFailureMicroflow = OnFailureMicroflow;
	}

	@Override
	public java.lang.String executeAction() throws Exception
	{
		this.CredentialsFile = __CredentialsFile == null ? null : system.proxies.FileDocument.initialize(getContext(), __CredentialsFile);

		// BEGIN USER CODE
		Agent agent = new Agent();
		String projectId = FileHelper.getProjectId(this.getContext(), __CredentialsFile);
		
		if (agent.getSubscriber(SubscriptionId + "-" + projectId) == null)
		{
			agent.initialize();
			InputStream credentialsInputFile = FileHelper.getCredentialsFileStream(this.getContext(),__CredentialsFile);		
			GCPSubscriber subscriber = new GCPSubscriber(SubscriptionId, projectId, credentialsInputFile, OnMessageMicroflow).subscribe().start();
			agent.pushSub(subscriber);
			Core.getLogger(Agent.LogNode).debug("Listening to: "+agent.getGcpSubscribers().size() + " Subscriptions");
		}
		else
		{
			Core.getLogger(Agent.LogNode).info(SubscriptionId + " already subscribed");
		}
		return projectId;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public java.lang.String toString()
	{
		return "subscribeToGCPSub";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
