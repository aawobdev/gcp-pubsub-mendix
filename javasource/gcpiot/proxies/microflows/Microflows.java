// This file was generated by Mendix Modeler 7.21.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package gcpiot.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;

public class Microflows
{
	// These are the microflows for the GCPIoT module
	public static void aCo_SetProjectIdFromCredentialsFile(IContext context, gcpiot.proxies.GCPCredentials _gCPCredentials)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("GCPCredentials", _gCPCredentials == null ? null : _gCPCredentials.getMendixObject());
			Core.execute(context, "GCPIoT.ACo_SetProjectIdFromCredentialsFile", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void shutdown(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "GCPIoT.Shutdown", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean startup(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			return (java.lang.Boolean)Core.execute(context, "GCPIoT.Startup", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void subscribeWithCredentialsFile(IContext context, main.proxies.Subscription _subscription)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Subscription", _subscription == null ? null : _subscription.getMendixObject());
			Core.execute(context, "GCPIoT.SubscribeWithCredentialsFile", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}